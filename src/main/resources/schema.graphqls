type Query {
  leagueById(id: ID): League 
}

type League {
  fantasyFootballId: ID
  name: String
  teams: [Team]
}

type Team {
	fantasyFootballId: ID
	teamName: String
	managerName: String
	totalPoints: Int
	form: Float
	teamValue: Float
	totalTransfers: Int
	bank: Float
	gameweekPoints: Int
	wildcard: Boolean
	benchBoost: Boolean
	freeHit: Boolean
	tripleCaptain: Boolean
	overallRank: Int
	transferHits: Int
	transfersThisGameweek: Int
	expectedPoints: Int
	gameweekRank: Int
	players: [Player]
	substitutes: [Player]
	captain: Player
	viceCaptain: Player
	weeklyTransfersListOut: [Player]
	weeklyTransfersListIn: [Player]
}
type Player {
	fantasyFootballId: ID
	webName: String
	firstName: String
	lastName: String
	totalPoints: Int
	gameweekPoints: Int
	form: Float
	price: Float
	injured: Boolean
	pointsPerGame: Float
	bonusPoints: Int
	position: Int
	team: Int
	didNotPlay: Boolean
	minutesPlayed: Int
	cleanSheet: Boolean
	assists: Int
	goalsScored: Int
	changePercentage: Int
}
